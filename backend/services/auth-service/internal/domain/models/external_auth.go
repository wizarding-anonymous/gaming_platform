package models

// TelegramLoginRequest DTO for Telegram Login widget data.
// Fields match common Telegram login parameters.
// See: https://core.telegram.org/widgets/login
type TelegramLoginRequest struct {
	ID        int64  `json:"id" binding:"required"`
	FirstName string `json:"first_name,omitempty"` // Optional by Telegram, but often sent
	LastName  string `json:"last_name,omitempty"`  // Optional
	Username  string `json:"username,omitempty"`   // Optional
	PhotoURL  string `json:"photo_url,omitempty"`  // Optional
	AuthDate  int64  `json:"auth_date" binding:"required"`
	Hash      string `json:"hash" binding:"required"`
}

// OAuthStateCookie is used to store state for OAuth flows.
// This is a conceptual DTO, actual storage might differ (e.g. session, Redis with TTL).
type OAuthStateData struct {
	Provider     string `json:"provider"`
	State        string `json:"state"` // The random state string generated by us
	RedirectURI  string `json:"redirect_uri,omitempty"` // Original client redirect URI if provided
	ClientIP     string `json:"client_ip"` // To help verify callback source (optional)
	UserAgent    string `json:"user_agent"`
	ExpiresAt    int64  `json:"expires_at"` // Unix timestamp for expiry
}

// Define other OAuth related DTOs if needed, e.g., for specific provider callbacks if they vary greatly,
// or for requests to the service layer if more parameters than just code/state are passed from handler.
