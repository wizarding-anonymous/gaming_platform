apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: gaiming
  labels:
    app: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: gaiming-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auth-service
      securityContext:
        fsGroup: 1000
      containers:
        - name: auth-service
          image: registry.gaiming.ru/gaiming/auth-service:latest
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          env:
            - name: APP_ENV
              value: "production"
            - name: APP_PORT
              value: "8080"
            - name: APP_GRPC_PORT
              value: "9090"
            - name: METRICS_PORT
              value: "9100"
            - name: APP_HOST
              value: "0.0.0.0"
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "json"
            - name: OTEL_ENABLED
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: "auth-service"
            - name: METRICS_ENABLED
              value: "true"
            - name: CORS_ALLOWED_ORIGINS
              value: "https://gaiming.ru,https://www.gaiming.ru,https://api.gaiming.ru"
            - name: APP_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: auth-service-config
                  key: APP_BASE_URL
            - name: APP_SHUTDOWN_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: auth-service-config
                  key: APP_SHUTDOWN_TIMEOUT
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_PASSWORD
            - name: DB_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: DB_SSL_MODE
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: JWT_SECRET
            - name: JWT_ACCESS_TOKEN_EXPIRY
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: JWT_ACCESS_TOKEN_EXPIRY
            - name: JWT_REFRESH_TOKEN_EXPIRY
              valueFrom:
                secretKeyRef:
                  name: auth-service-secrets
                  key: JWT_REFRESH_TOKEN_EXPIRY
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      imagePullSecrets:
        - name: registry-credentials
