apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: gaiming
  labels:
    app: auth-service
type: Opaque
stringData:
  # Настройки базы данных
  DB_HOST: "postgres.gaiming.svc.cluster.local"
  DB_PORT: "5432"
  DB_NAME: "auth_service"
  DB_USER: "auth_service_user"
  DB_PASSWORD: "{{ .Values.secrets.dbPassword }}"
  DB_SSL_MODE: "require"
  
  # Настройки Redis
  REDIS_HOST: "redis.gaiming.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "{{ .Values.secrets.redisPassword }}"
  REDIS_DB: "0"
  
  # Настройки JWT
  JWT_SECRET: "{{ .Values.secrets.jwtSecret }}"
  JWT_ACCESS_TOKEN_EXPIRY: "15m"
  JWT_REFRESH_TOKEN_EXPIRY: "720h"
  JWT_ISSUER: "gaiming.auth-service"
  
  # Настройки Kafka
  KAFKA_BROKERS: "kafka-0.kafka-headless.gaiming.svc.cluster.local:9092,kafka-1.kafka-headless.gaiming.svc.cluster.local:9092"
  KAFKA_GROUP_ID: "auth-service"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  KAFKA_SASL_MECHANISM: "PLAIN"
  KAFKA_SASL_USERNAME: "{{ .Values.secrets.kafkaUsername }}"
  KAFKA_SASL_PASSWORD: "{{ .Values.secrets.kafkaPassword }}"
  
  # Настройки OpenTelemetry
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.monitoring.svc.cluster.local:4317"
  
  # Настройки Telegram Login
  TELEGRAM_BOT_TOKEN: "{{ .Values.secrets.telegramBotToken }}"
  
  # Настройки Vault
  VAULT_ADDR: "http://vault.vault.svc.cluster.local:8200"
  VAULT_TOKEN: "{{ .Values.secrets.vaultToken }}"
  
  # Настройки для интеграции с другими сервисами
  SERVICE_API_KEY: "{{ .Values.secrets.serviceApiKey }}"
